{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","swal","type","value","placeholder","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","GifGridItem","className","src","alt","GifGrid","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"gNA+CeA,EA3CK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAGHC,mBAAS,IAHN,mBAGhCC,EAHgC,KAGpBC,EAHoB,KAsBvC,OACI,mCACE,sBAAMC,SAfS,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,GAE7BR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAmBO,OACpCN,EAAc,KAGdO,IAAK,QAAS,yBAA0B,SAMtC,SACI,uBACAC,KAAK,OACLC,MAAOV,EACPW,YAAY,sBACZC,SAxBgB,SAACT,GACzBF,EAAcE,EAAEU,OAAOH,e,wBCQVI,EAlBJ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACNC,EADM,iDAC2CC,UAAUH,GADrD,gEAEWI,MAAMF,GAFjB,cAENG,EAFM,gBAGSA,EAASC,OAHlB,uBAGLC,EAHK,EAGLA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAR1B,kBAcLM,GAdK,4CAAH,sDC0BEO,EAvBM,SAACf,GAAc,IAAD,EACPhB,mBAAS,CACjCuB,KAAK,GACLS,SAAS,IAHsB,mBAC1BC,EAD0B,KACnBC,EADmB,KAoBjC,OAdAC,qBAAU,WACRpB,EAAQC,GAEPoB,MAAM,SAAAC,GACHH,EAAS,CACNX,KAAKc,EACLL,SAAS,SAIf,CAAChB,IAIGiB,GCVMK,EAXK,SAAC,GAAsB,IAArBX,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAG/B,OACE,qBAAcqB,UAAU,8CAAxB,SACE,qBAAKC,IAAKtB,EAAKuB,IAAKb,KADZD,I,QC4DCe,EA3DC,SAAC,GAAgB,IAAf1B,EAAc,EAAdA,SAAc,EAqBCe,EAAaf,GAAhCa,EArBkB,EAqBvBN,KAAaS,EArBU,EAqBVA,QAMpB,OACI,qCACI,6BAAKhB,IACJgB,GAAW,cAAC,IAAD,IAEZ,qBAAKO,UAAU,YAAf,SAIMV,EAAOJ,KAAK,YAAuB,IAArBE,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACvB,OACD,8BACK,cAAC,EAAD,CACES,GAAIA,EACJC,MAAOA,EACPV,IAAKA,GACAS,IALFA,YCMZgB,EA/CM,WAAO,IAAD,EAGW3C,mBAAS,CAAC,iBAHrB,mBAGlB4C,EAHkB,KAGN7C,EAHM,KAezB,OACE,gCACI,oBAAIwC,UAAU,iFAAd,wBAGA,cAAC,EAAD,CAAaxC,cAAeA,IAI5B,6BAEI6C,EAAWnB,KAAK,SAAAT,GAAQ,OAEtB,cAAC,EAAD,CAEEA,SAAUA,GADLA,YC5BrB6B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.84700bf4.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport swal from 'sweetalert';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n\r\n  const [inputValue, setInputValue] = useState('')\r\n\r\n  const handleInputChange = (e)=>{  \r\n    setInputValue(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = (e)=>{\r\n    e.preventDefault()\r\n\r\n    if( inputValue.trim().length > 2 ){\r\n\r\n      setCategories(cat => [inputValue,...cat] )\r\n      setInputValue('')\r\n     \r\n    }else{\r\n      swal(\"Oops!\", \"Please, add something!\", \"info\");\r\n    }\r\n  }\r\n\r\n  return (\r\n      <>\r\n        <form onSubmit={handleSubmit} >\r\n            <input \r\n            type=\"text\"\r\n            value={inputValue}\r\n            placeholder='Search your gifs...'\r\n            onChange={handleInputChange}\r\n                  \r\n            />       \r\n        </form>\r\n\r\n      </>\r\n    \r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","const getGifs = async (category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }d&limit=10&api_key=BFVFPdUbuJ42nJqNqXTIz00hickTXKrF`\r\n    const response = await fetch(url)\r\n    const {data} = await response.json()\r\n    const gifs = data.map( img => {\r\n      return {\r\n        id: img.id, \r\n        title: img.title, \r\n        url: img.images?.downsized_medium.url\r\n      }\r\n    } )\r\n    \r\n  /*   setImg(gifs) */\r\n\r\n    return gifs\r\n  \r\n  }\r\n\r\n  export default getGifs","import { useEffect, useState } from 'react'\r\nimport getGifs from '../helpers/getGifs'\r\n\r\nconst useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data:[], \r\n    loading: true\r\n  })\r\n\r\n  useEffect(() => {\r\n    getGifs(category)\r\n\r\n    .then( imgs => {     \r\n        setState({\r\n           data:imgs, \r\n           loading: false\r\n        })\r\n    })\r\n    \r\n  }, [category])\r\n\r\n\r\n  \r\n  return state //{ data:[], loading:true }\r\n}\r\n\r\nexport default useFetchGifs\r\n","import React from 'react'\r\n\r\nconst GifGridItem = ({id, title, url}) => {\r\n\r\n  /* console.log(id, title, url) */\r\n  return (\r\n    <div key={id} className=\"card animate__animated animate__slideInDown\" >\r\n      <img src={url} alt={title} />\r\n        {/* <p >{title}</p> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\n/* import getGifs from '../helpers/getGifs' */\r\nimport useFetchGifs from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem'\r\nimport { Ring } from 'react-awesome-spinners'\r\n\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n    //Here test to see utils of useEffect\r\n  /* const [contador, setcontador] = useState(0) */\r\n\r\n  /* const [img, setImg] = useState([])\r\n\r\n\r\n  useEffect(() => {\r\n    getGifs(category)\r\n    .then(imgs => setImg(imgs))\r\n  }, [category])\r\n */\r\n\r\n \r\n\r\n\r\n  /* getGifs() */\r\n\r\n  //Here Custom Hooks\r\n  //Desestructure object from customs hooks\r\n  const {data:images, loading} = useFetchGifs(category)\r\n\r\n \r\n  \r\n\r\n\r\n  return (\r\n      <>\r\n          <h3>{category}</h3>\r\n          {loading && <Ring/> }\r\n\r\n          <div className=\"card-grid\" >\r\n        \r\n              {\r\n                //Tomamos array img(tiene la info) y desestrucutamos (id, title, url)\r\n                images.map( ({id, title, url}) => {\r\n                  return (\r\n                 <div key={id}>\r\n                      <GifGridItem \r\n                        id={id}\r\n                        title={title}\r\n                        url={url}\r\n                        key={id}\r\n                        /> \r\n                   \r\n                 </div>\r\n                  )\r\n                }\r\n                \r\n                )\r\n              }         \r\n        </div>\r\n      </>\r\n  )\r\n}\r\n/* { ...img }\r\nkey={img.id} */\r\n\r\nexport default GifGrid\r\n","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory'\r\nimport GifGrid from './components/GifGrid'\r\n\r\nconst GifExpertApp = () => {\r\n\r\n\r\n  const [categories, setCategories] = useState(['Eric Cartman'])\r\n  \r\n/*   const handleAdd = (e)=>{\r\n    //We can use express operato (...), and value to add \r\n   setCategories([...categories,'Death Note'])\r\n    console.log(categories)  \r\n\r\n    //Other way can be \r\n    setCategories(c => [...c, 'Homer'])\r\n  }  */\r\n\r\n\r\n  return (\r\n    <div>\r\n        <h2 className=\"animate__animated animate__slow 5s animate__flash animate__infinite\tinfinite \">Gif Expert</h2>\r\n\r\n       {/* Here i add props setCategories */}\r\n        <AddCategory setCategories={setCategories}/>\r\n\r\n \r\n        \r\n        <ol>\r\n          {\r\n            categories.map( category =>(\r\n\r\n              <GifGrid   \r\n                key={category}  \r\n                category={category}          \r\n              />\r\n\r\n            )\r\n              \r\n\r\n              /*   <li  key={c} >{c} </li> */\r\n              \r\n            )\r\n          }\r\n        </ol>\r\n\r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp'\n\nReactDOM.render(\n  \n    <GifExpertApp/>\n  ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}